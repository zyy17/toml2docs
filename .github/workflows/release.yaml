name: Release

on:
  push:
    tags:
      - "v*"

env:
  GO_VERSION: "1.21"

jobs:
  build:
    name: build-binary
    if: ${{ github.event_name == 'push' }}
    strategy:
      matrix:
        # The file format is toml2docs-<os>-<arch>
        include:
          - os: ubuntu-latest
            file: toml2docs-linux-amd64
            goos: linux
            goarch: amd64
          - os: ubuntu-latest
            file: toml2docs-linux-arm64
            goos: linux
            goarch: arm64
          - os: macos-latest
            file: toml2docs-darwin-arm64
            goos: darwin
            goarch: arm64
          - os: macos-latest
            file: toml2docs-darwin-amd64
            goos: darwin
            goarch: amd64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build project
        run: |
          make
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}

      - name: Calculate checksum and rename binary
        shell: bash
        run: |
          cd bin
          chmod +x toml2docs
          tar -zcvf ${{ matrix.file }}.tgz toml2docs
          echo $(shasum -a 256 ${{ matrix.file }}.tgz | cut -f1 -d' ') > ${{ matrix.file }}.sha256sum

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.file }}
          path: bin/${{ matrix.file }}.tgz

      - name: Upload checksum of artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.file }}.sha256sum
          path: bin/${{ matrix.file }}.sha256sum

  release:
    name: release-artifacts
    needs: [ build ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Publish release
        uses: ncipollo/release-action@v1
        with:
          name: "Release ${{ github.ref_name }}"
          prerelease: false
          make_release: true
          generateReleaseNotes: true
          allowUpdates: true
          tag: ${{ github.ref_name }}
          artifacts: |
            **/toml2docs-*

  docker:
    name: build-image
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            docker.io/toml2docs/toml2docs:latest
            docker.io/toml2docs/toml2docs:${{ github.ref_name }}
